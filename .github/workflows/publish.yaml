name: Publish Image and Chart

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout your code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set IMAGE_TAG = the commit SHA
      - name: Set IMAGE_TAG
        id: vars
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      # 3. Authenticate Docker to GHCR and push the image
      - name: Log in to GHCR (Docker)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.IMAGE_TAG }}

      # 4. Install Helm CLI
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: latest

      # 5. Authenticate Helmâ€™s OCI client to GHCR
      - name: Log in to GHCR (Helm OCI)
        run: |
          echo "${{ secrets.GHCR_TOKEN }}" \
            | helm registry login ghcr.io \
                --username "${{ github.actor }}" \
                --password-stdin

      # 6. Prepare charts folder
      - name: Prepare charts directory
        run: mkdir -p ./charts

      # 7. Package the chart
      - name: Package Helm chart
        run: helm package quakewatch-web-chart/ --destination ./charts

      # 8. Push the chart as an OCI artifact to GHCR
      - name: Push Helm chart to GHCR
        run: |
          helm push \
            ./charts/quakewatch-web-chart-*.tgz \
            oci://ghcr.io/${{ github.repository_owner }}/quakewatch-web-chart
